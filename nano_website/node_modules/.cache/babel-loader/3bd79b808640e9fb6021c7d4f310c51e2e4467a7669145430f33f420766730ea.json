{"ast":null,"code":"var _jsxFileName = \"/Users/omerahmer/Downloads/nano website/nano_website/src/components/People.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PeopleCard = ({\n  name,\n  teams,\n  blurb,\n  image\n}) => {\n  const cardStyle = {\n    display: 'flex',\n    margin: '20px',\n    padding: '20px',\n    border: '1px solid #ccc'\n  };\n  const detailsColumnStyle = {\n    flex: '1',\n    paddingRight: '20px'\n  };\n  const imageColumnStyle = {\n    width: '100%',\n    // Set to 100% to preserve aspect ratio\n    maxWidth: '300px' // Fixed width of 300px\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: cardStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: detailsColumnStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: teams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blurb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: imageColumnStyle,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: name,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = PeopleCard;\nconst People = () => {\n  const people = [\n    // ... (your people data array)\n  ];\n  const appStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: appStyle,\n    children: people.map((person, index) => /*#__PURE__*/_jsxDEV(PeopleCard, {\n      ...person\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c2 = People;\nexport default People;\nvar _c, _c2;\n$RefreshReg$(_c, \"PeopleCard\");\n$RefreshReg$(_c2, \"People\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PeopleCard","name","teams","blurb","image","cardStyle","display","margin","padding","border","detailsColumnStyle","flex","paddingRight","imageColumnStyle","width","maxWidth","style","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","People","people","appStyle","flexWrap","justifyContent","map","person","index","_c2","$RefreshReg$"],"sources":["/Users/omerahmer/Downloads/nano website/nano_website/src/components/People.jsx"],"sourcesContent":["import React from 'react';\n\nconst PeopleCard = ({ name, teams, blurb, image }) => {\n  const cardStyle = {\n    display: 'flex',\n    margin: '20px',\n    padding: '20px',\n    border: '1px solid #ccc',\n  };\n\n  const detailsColumnStyle = {\n    flex: '1',\n    paddingRight: '20px',\n  };\n\n  const imageColumnStyle = {\n    width: '100%', // Set to 100% to preserve aspect ratio\n    maxWidth: '300px', // Fixed width of 300px\n  };\n\n  return (\n    <div style={cardStyle}>\n      <div style={detailsColumnStyle}>\n        <h2>{name}</h2>\n        <p>{teams}</p>\n        <p>{blurb}</p>\n      </div>\n      <div style={imageColumnStyle}>\n        <img src={image} alt={name} style={{ width: '100%' }} />\n      </div>\n    </div>\n  );\n};\n\nconst People = () => {\n  const people = [\n    // ... (your people data array)\n  ];\n\n  const appStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n  };\n\n  return (\n    <div style={appStyle}>\n      {people.map((person, index) => (\n        <PeopleCard key={index} {...person} />\n      ))}\n    </div>\n  );\n};\n\nexport default People;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EACpD,MAAMC,SAAS,GAAG;IAChBC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,kBAAkB,GAAG;IACzBC,IAAI,EAAE,GAAG;IACTC,YAAY,EAAE;EAChB,CAAC;EAED,MAAMC,gBAAgB,GAAG;IACvBC,KAAK,EAAE,MAAM;IAAE;IACfC,QAAQ,EAAE,OAAO,CAAE;EACrB,CAAC;EAED,oBACEhB,OAAA;IAAKiB,KAAK,EAAEX,SAAU;IAAAY,QAAA,gBACpBlB,OAAA;MAAKiB,KAAK,EAAEN,kBAAmB;MAAAO,QAAA,gBAC7BlB,OAAA;QAAAkB,QAAA,EAAKhB;MAAI;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACftB,OAAA;QAAAkB,QAAA,EAAIf;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdtB,OAAA;QAAAkB,QAAA,EAAId;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACNtB,OAAA;MAAKiB,KAAK,EAAEH,gBAAiB;MAAAI,QAAA,eAC3BlB,OAAA;QAAKuB,GAAG,EAAElB,KAAM;QAACmB,GAAG,EAAEtB,IAAK;QAACe,KAAK,EAAE;UAAEF,KAAK,EAAE;QAAO;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,GA9BIxB,UAAU;AAgChB,MAAMyB,MAAM,GAAGA,CAAA,KAAM;EACnB,MAAMC,MAAM,GAAG;IACb;EAAA,CACD;EAED,MAAMC,QAAQ,GAAG;IACfrB,OAAO,EAAE,MAAM;IACfsB,QAAQ,EAAE,MAAM;IAChBC,cAAc,EAAE;EAClB,CAAC;EAED,oBACE9B,OAAA;IAAKiB,KAAK,EAAEW,QAAS;IAAAV,QAAA,EAClBS,MAAM,CAACI,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACxBjC,OAAA,CAACC,UAAU;MAAA,GAAiB+B;IAAM,GAAjBC,KAAK;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACY,GAAA,GAlBIR,MAAM;AAoBZ,eAAeA,MAAM;AAAC,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}