{"ast":null,"code":"var _jsxFileName = \"/Users/omerahmer/Downloads/nano website/nano_website/src/components/Biosensor/Biosensor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useNavigate } from 'react-router-dom';\nimport { decodeToken } from 'react-jwt';\nimport '../../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Biosensor = () => {\n  _s();\n  const fadeIn = useSpring({\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    },\n    config: {\n      duration: 1000\n    }\n  });\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          navigate('/login');\n          return;\n        }\n        const user = decodeToken(token);\n        if (!user) {\n          localStorage.removeItem('token');\n          navigate('/login');\n          return;\n        }\n        setLoading(false);\n        const req = await fetch('http://localhost:1337/api/Biosensor', {\n          headers: {\n            'x-access-token': token\n          }\n        });\n        const data = await req.json();\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        localStorage.removeItem('token');\n        navigate('/login');\n      }\n    };\n    fetchData();\n    return () => {\n      // Any cleanup logic (e.g., canceling requests, unsubscribing from subscriptions)\n    };\n  }, [navigate]);\n\n  // Render loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    className: \"cover-container d-flex w-100 h-100 p-3 mx-auto flex-column font-link\",\n    style: fadeIn,\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Biosensor page under construction!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Biosensor, \"B64lhskyz7MI6PyggkdRVNZlr+c=\", false, function () {\n  return [useSpring, useNavigate];\n});\n_c = Biosensor;\nexport default Biosensor;\nvar _c;\n$RefreshReg$(_c, \"Biosensor\");","map":{"version":3,"names":["React","useEffect","useState","useSpring","animated","useNavigate","decodeToken","jsxDEV","_jsxDEV","Biosensor","_s","fadeIn","from","opacity","to","config","duration","navigate","loading","setLoading","fetchData","token","localStorage","getItem","user","removeItem","req","fetch","headers","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","div","className","style","_c","$RefreshReg$"],"sources":["/Users/omerahmer/Downloads/nano website/nano_website/src/components/Biosensor/Biosensor.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useNavigate } from 'react-router-dom';\nimport { decodeToken } from 'react-jwt';\nimport '../../index.css'\n\n\nconst Biosensor = () => {\n    const fadeIn = useSpring({\n        from: { opacity: 0 },\n        to: { opacity: 1 },\n        config: { duration: 1000 },\n    });\n    const navigate = useNavigate();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                if (!token) {\n                    navigate('/login');\n                    return;\n                }\n                const user = decodeToken(token);\n                if (!user) {\n                    localStorage.removeItem('token');\n                    navigate('/login');\n                    return;\n                }\n                setLoading(false);\n                const req = await fetch('http://localhost:1337/api/Biosensor', {\n                    headers: {\n                        'x-access-token': token,\n                    },\n                });\n                const data = await req.json();\n                console.log(data);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n                localStorage.removeItem('token');\n                navigate('/login');\n            }\n        };\n        fetchData();\n        return () => {\n            // Any cleanup logic (e.g., canceling requests, unsubscribing from subscriptions)\n        };\n    }, [navigate]);\n\n    // Render loading state\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n    return (\n        <animated.div className=\"cover-container d-flex w-100 h-100 p-3 mx-auto flex-column font-link\" style={fadeIn}>\n            <h1>Biosensor page under construction!</h1>\n        </animated.div>\n    );\n};\n\nexport default Biosensor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,cAAc;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,WAAW;AACvC,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGxB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGR,SAAS,CAAC;IACrBS,IAAI,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAC;IACpBC,EAAE,EAAE;MAAED,OAAO,EAAE;IAAE,CAAC;IAClBE,MAAM,EAAE;MAAEC,QAAQ,EAAE;IAAK;EAC7B,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE;UACRJ,QAAQ,CAAC,QAAQ,CAAC;UAClB;QACJ;QACA,MAAMO,IAAI,GAAGlB,WAAW,CAACe,KAAK,CAAC;QAC/B,IAAI,CAACG,IAAI,EAAE;UACPF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;UAChCR,QAAQ,CAAC,QAAQ,CAAC;UAClB;QACJ;QACAE,UAAU,CAAC,KAAK,CAAC;QACjB,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAC3DC,OAAO,EAAE;YACL,gBAAgB,EAAEP;UACtB;QACJ,CAAC,CAAC;QACF,MAAMQ,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CX,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;QAChCR,QAAQ,CAAC,QAAQ,CAAC;MACtB;IACJ,CAAC;IACDG,SAAS,CAAC,CAAC;IACX,OAAO,MAAM;MACT;IAAA,CACH;EACL,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;;EAEd;EACA,IAAIC,OAAO,EAAE;IACT,oBAAOV,OAAA;MAAA0B,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5B;EACA,oBACI9B,OAAA,CAACJ,QAAQ,CAACmC,GAAG;IAACC,SAAS,EAAC,sEAAsE;IAACC,KAAK,EAAE9B,MAAO;IAAAuB,QAAA,eACzG1B,OAAA;MAAA0B,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEvB,CAAC;AAAC5B,EAAA,CApDID,SAAS;EAAA,QACIN,SAAS,EAKPE,WAAW;AAAA;AAAAqC,EAAA,GAN1BjC,SAAS;AAsDf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}